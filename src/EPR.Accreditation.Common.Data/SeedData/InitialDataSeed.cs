using EPR.Accreditation.API.Common.Data.DataModels.Lookups;
using Microsoft.EntityFrameworkCore;

namespace EPR.Accreditation.SeedData
{
    public static class InitialDataSeed
    {
        private const string Undefined = "Undefined";
        public static void Seed(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AccreditationStatus>().HasData(
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.None, Name = "None" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Started, Name = "Started" },

                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Submitted, Name = "Submitted" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Accepted, Name = "Accepted" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Queried, Name = "Queried" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Updated, Name = "Updated" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Granted, Name = "Granted" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Refused, Name = "Refused" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Withdrawn, Name = "Withdrawn" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Suspended, Name = "Suspended" },
                new AccreditationStatus { Id = API.Common.Data.Enums.AccreditationStatus.Cancelled, Name = "Cancelled" }
                );

            modelBuilder.Entity<FileUploadStatus>().HasData(
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.Undefined, Name = Undefined },
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.VirusCheckSuccess, Name = "Virus check success" },
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.UploadComplete, Name = "Upload complete" },
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.VirusCheckFailed, Name = "Virus check failed" },
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.UploadFailed, Name = "Upload failed" },
                new FileUploadStatus { Id = API.Common.Data.Enums.FileUploadStatus.Deleted, Name = "Deleted" }
                );

            modelBuilder.Entity<FileUploadType>().HasData(
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.Undefined, Name = Undefined },
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.BusinessPlan, Name = "Business plan" },
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.RecordingSystem, Name = "Recording system" },
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.SamplingPlan, Name = "Sampling plan" },
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.BroadlyEquivalentEvidence, Name = "Broadly eviquivalent evidence" },
                new FileUploadType { Id = API.Common.Data.Enums.FileUploadType.FlowDiagram, Name = "Flow diagram" }
                );

            modelBuilder.Entity<OperatorType>().HasData(
                new OperatorType { Id = API.Common.Data.Enums.OperatorType.Reprocessor, Name = "Reprocessor" },
                new OperatorType { Id = API.Common.Data.Enums.OperatorType.Exporter, Name = "Exporter" }
                );

            modelBuilder.Entity<ReprocessorSupportingInformationType>().HasData(
                new ReprocessorSupportingInformationType { Id = API.Common.Data.Enums.ReprocessorSupportingInformationType.Undefined, Name = Undefined },
                new ReprocessorSupportingInformationType { Id = API.Common.Data.Enums.ReprocessorSupportingInformationType.NonWasteInputs, Name = "Non waste inputs" },
                new ReprocessorSupportingInformationType { Id = API.Common.Data.Enums.ReprocessorSupportingInformationType.ProductsProduced, Name = "Products produced last year" }
                );

            modelBuilder.Entity<TaskName>().HasData(
                new TaskName { Id = API.Common.Data.Enums.TaskName.Undefined, Name = Undefined },
                new TaskName { Id = API.Common.Data.Enums.TaskName.WasteLicencesAndPrns, Name = "Waste licence and PRNs" },
                new TaskName { Id = API.Common.Data.Enums.TaskName.UploadBusinessPlan, Name = "Upload a business plan" },
                new TaskName { Id = API.Common.Data.Enums.TaskName.AboutMaterial, Name = "About the material" },
                new TaskName { Id = API.Common.Data.Enums.TaskName.UploadSupportingDocuments, Name = "Upload supporting documents" }
                );

            modelBuilder.Entity<API.Common.Data.DataModels.Lookups.TaskStatus>().HasData(
                new API.Common.Data.DataModels.Lookups.TaskStatus { Id = API.Common.Data.Enums.TaskStatus.Undefined, Name = Undefined },
                new API.Common.Data.DataModels.Lookups.TaskStatus { Id = API.Common.Data.Enums.TaskStatus.NotStarted, Name = "Not started" },
                new API.Common.Data.DataModels.Lookups.TaskStatus { Id = API.Common.Data.Enums.TaskStatus.Started, Name = "Started" },
                new API.Common.Data.DataModels.Lookups.TaskStatus { Id = API.Common.Data.Enums.TaskStatus.Completed, Name = "Completed" },
                new API.Common.Data.DataModels.Lookups.TaskStatus { Id = API.Common.Data.Enums.TaskStatus.CannotStartYet, Name = "Cannot start yet" }
                );

            modelBuilder.Entity<WasteCodeType>().HasData(
                new WasteCodeType { Id = API.Common.Data.Enums.WasteCodeType.Undefined, Name = Undefined },
                new WasteCodeType { Id = API.Common.Data.Enums.WasteCodeType.WasteDescriptionCode, Name = "Waste description code" },
                new WasteCodeType { Id = API.Common.Data.Enums.WasteCodeType.MaterialCommodityCode, Name = "Material commodity code" }
                );

            modelBuilder.Entity<Country>().HasData(
                new Country { CountryId = 4, CountryCode = "AF", Name = "Afghanistan" },
                new Country { CountryId = 248, CountryCode = "AX", Name = "Åland Islands" },
                new Country { CountryId = 8, CountryCode = "AL", Name = "Albania" },
                new Country { CountryId = 12, CountryCode = "DZ", Name = "Algeria" },
                new Country { CountryId = 16, CountryCode = "AS", Name = "American Samoa" },
                new Country { CountryId = 20, CountryCode = "AD", Name = "Andorra" },
                new Country { CountryId = 24, CountryCode = "AO", Name = "Angola" },
                new Country { CountryId = 660, CountryCode = "AI", Name = "Anguilla" },
                new Country { CountryId = 10, CountryCode = "AQ", Name = "Antarctica" },
                new Country { CountryId = 28, CountryCode = "AG", Name = "Antigua and Barbuda" },
                new Country { CountryId = 32, CountryCode = "AR", Name = "Argentina" },
                new Country { CountryId = 51, CountryCode = "AM", Name = "Armenia" },
                new Country { CountryId = 533, CountryCode = "AW", Name = "Aruba" },
                new Country { CountryId = 36, CountryCode = "AU", Name = "Australia" },
                new Country { CountryId = 40, CountryCode = "AT", Name = "Austria" },
                new Country { CountryId = 31, CountryCode = "AZ", Name = "Azerbaijan" },
                new Country { CountryId = 44, CountryCode = "BS", Name = "Bahamas" },
                new Country { CountryId = 48, CountryCode = "BH", Name = "Bahrain" },
                new Country { CountryId = 50, CountryCode = "BD", Name = "Bangladesh" },
                new Country { CountryId = 52, CountryCode = "BB", Name = "Barbados" },
                new Country { CountryId = 112, CountryCode = "BY", Name = "Belarus" },
                new Country { CountryId = 56, CountryCode = "BE", Name = "Belgium" },
                new Country { CountryId = 84, CountryCode = "BZ", Name = "Belize" },
                new Country { CountryId = 204, CountryCode = "BJ", Name = "Benin" },
                new Country { CountryId = 60, CountryCode = "BM", Name = "Bermuda" },
                new Country { CountryId = 64, CountryCode = "BT", Name = "Bhutan" },
                new Country { CountryId = 68, CountryCode = "BO", Name = "Bolivia (Plurinational State of)" },
                new Country { CountryId = 535, CountryCode = "BQ", Name = "Bonaire, Sint Eustatius and Saba" },
                new Country { CountryId = 70, CountryCode = "BA", Name = "Bosnia and Herzegovina" },
                new Country { CountryId = 72, CountryCode = "BW", Name = "Botswana" },
                new Country { CountryId = 74, CountryCode = "BV", Name = "Bouvet Island" },
                new Country { CountryId = 76, CountryCode = "BR", Name = "Brazil" },
                new Country { CountryId = 86, CountryCode = "IO", Name = "British Indian Ocean Territory" },
                new Country { CountryId = 96, CountryCode = "BN", Name = "Brunei Darussalam" },
                new Country { CountryId = 100, CountryCode = "BG", Name = "Bulgaria" },
                new Country { CountryId = 854, CountryCode = "BF", Name = "Burkina Faso" },
                new Country { CountryId = 108, CountryCode = "BI", Name = "Burundi" },
                new Country { CountryId = 132, CountryCode = "CV", Name = "Cabo Verde" },
                new Country { CountryId = 116, CountryCode = "KH", Name = "Cambodia" },
                new Country { CountryId = 120, CountryCode = "CM", Name = "Cameroon" },
                new Country { CountryId = 124, CountryCode = "CA", Name = "Canada" },
                new Country { CountryId = 136, CountryCode = "KY", Name = "Cayman Islands" },
                new Country { CountryId = 140, CountryCode = "CF", Name = "Central African Republic" },
                new Country { CountryId = 148, CountryCode = "TD", Name = "Chad" },
                new Country { CountryId = 152, CountryCode = "CL", Name = "Chile" },
                new Country { CountryId = 156, CountryCode = "CN", Name = "China" },
                new Country { CountryId = 162, CountryCode = "CX", Name = "Christmas Island" },
                new Country { CountryId = 166, CountryCode = "CC", Name = "Cocos (Keeling) Islands" },
                new Country { CountryId = 170, CountryCode = "CO", Name = "Colombia" },
                new Country { CountryId = 174, CountryCode = "KM", Name = "Comoros" },
                new Country { CountryId = 178, CountryCode = "CG", Name = "Congo" },
                new Country { CountryId = 180, CountryCode = "CD", Name = "Congo (Democratic Republic of the)" },
                new Country { CountryId = 184, CountryCode = "CK", Name = "Cook Islands" },
                new Country { CountryId = 188, CountryCode = "CR", Name = "Costa Rica" },
                new Country { CountryId = 384, CountryCode = "CI", Name = "Côte d'Ivoire" },
                new Country { CountryId = 191, CountryCode = "HR", Name = "Croatia" },
                new Country { CountryId = 192, CountryCode = "CU", Name = "Cuba" },
                new Country { CountryId = 531, CountryCode = "CW", Name = "Curaçao" },
                new Country { CountryId = 196, CountryCode = "CY", Name = "Cyprus" },
                new Country { CountryId = 203, CountryCode = "CZ", Name = "Czech Republic" },
                new Country { CountryId = 208, CountryCode = "DK", Name = "Denmark" },
                new Country { CountryId = 262, CountryCode = "DJ", Name = "Djibouti" },
                new Country { CountryId = 212, CountryCode = "DM", Name = "Dominica" },
                new Country { CountryId = 214, CountryCode = "DO", Name = "Dominican Republic" },
                new Country { CountryId = 218, CountryCode = "EC", Name = "Ecuador" },
                new Country { CountryId = 818, CountryCode = "EG", Name = "Egypt" },
                new Country { CountryId = 222, CountryCode = "SV", Name = "El Salvador" },
                new Country { CountryId = 226, CountryCode = "GQ", Name = "Equatorial Guinea" },
                new Country { CountryId = 232, CountryCode = "ER", Name = "Eritrea" },
                new Country { CountryId = 233, CountryCode = "EE", Name = "Estonia" },
                new Country { CountryId = 231, CountryCode = "ET", Name = "Ethiopia" },
                new Country { CountryId = 238, CountryCode = "FK", Name = "Falkland Islands (Malvinas)" },
                new Country { CountryId = 234, CountryCode = "FO", Name = "Faroe Islands" },
                new Country { CountryId = 242, CountryCode = "FJ", Name = "Fiji" },
                new Country { CountryId = 246, CountryCode = "FI", Name = "Finland" },
                new Country { CountryId = 250, CountryCode = "FR", Name = "France" },
                new Country { CountryId = 254, CountryCode = "GF", Name = "French Guiana" },
                new Country { CountryId = 258, CountryCode = "PF", Name = "French Polynesia" },
                new Country { CountryId = 260, CountryCode = "TF", Name = "French Southern Territories" },
                new Country { CountryId = 266, CountryCode = "GA", Name = "Gabon" },
                new Country { CountryId = 270, CountryCode = "GM", Name = "Gambia" },
                new Country { CountryId = 268, CountryCode = "GE", Name = "Georgia" },
                new Country { CountryId = 276, CountryCode = "DE", Name = "Germany" },
                new Country { CountryId = 288, CountryCode = "GH", Name = "Ghana" },
                new Country { CountryId = 292, CountryCode = "GI", Name = "Gibraltar" },
                new Country { CountryId = 300, CountryCode = "GR", Name = "Greece" },
                new Country { CountryId = 304, CountryCode = "GL", Name = "Greenland" },
                new Country { CountryId = 308, CountryCode = "GD", Name = "Grenada" },
                new Country { CountryId = 312, CountryCode = "GP", Name = "Guadeloupe" },
                new Country { CountryId = 316, CountryCode = "GU", Name = "Guam" },
                new Country { CountryId = 320, CountryCode = "GT", Name = "Guatemala" },
                new Country { CountryId = 831, CountryCode = "GG", Name = "Guernsey" },
                new Country { CountryId = 324, CountryCode = "GN", Name = "Guinea" },
                new Country { CountryId = 624, CountryCode = "GW", Name = "Guinea-Bissau" },
                new Country { CountryId = 328, CountryCode = "GY", Name = "Guyana" },
                new Country { CountryId = 332, CountryCode = "HT", Name = "Haiti" },
                new Country { CountryId = 334, CountryCode = "HM", Name = "Heard Island and McDonald Islands" },
                new Country { CountryId = 336, CountryCode = "VA", Name = "Holy See" },
                new Country { CountryId = 340, CountryCode = "HN", Name = "Honduras" },
                new Country { CountryId = 344, CountryCode = "HK", Name = "Hong Kong" },
                new Country { CountryId = 348, CountryCode = "HU", Name = "Hungary" },
                new Country { CountryId = 352, CountryCode = "IS", Name = "Iceland" },
                new Country { CountryId = 356, CountryCode = "IN", Name = "India" },
                new Country { CountryId = 360, CountryCode = "ID", Name = "Indonesia" },
                new Country { CountryId = 364, CountryCode = "IR", Name = "Iran (Islamic Republic of)" },
                new Country { CountryId = 368, CountryCode = "IQ", Name = "Iraq" },
                new Country { CountryId = 372, CountryCode = "IE", Name = "Ireland" },
                new Country { CountryId = 833, CountryCode = "IM", Name = "Isle of Man" },
                new Country { CountryId = 376, CountryCode = "IL", Name = "Israel" },
                new Country { CountryId = 380, CountryCode = "IT", Name = "Italy" },
                new Country { CountryId = 388, CountryCode = "JM", Name = "Jamaica" },
                new Country { CountryId = 392, CountryCode = "JP", Name = "Japan" },
                new Country { CountryId = 832, CountryCode = "JE", Name = "Jersey" },
                new Country { CountryId = 400, CountryCode = "JO", Name = "Jordan" },
                new Country { CountryId = 398, CountryCode = "KZ", Name = "Kazakhstan" },
                new Country { CountryId = 404, CountryCode = "KE", Name = "Kenya" },
                new Country { CountryId = 296, CountryCode = "KI", Name = "Kiribati" },
                new Country { CountryId = 408, CountryCode = "KP", Name = "Korea (Democratic People's Republic of)" },
                new Country { CountryId = 410, CountryCode = "KR", Name = "Korea (Republic of)" },
                new Country { CountryId = 414, CountryCode = "KW", Name = "Kuwait" },
                new Country { CountryId = 417, CountryCode = "KG", Name = "Kyrgyzstan" },
                new Country { CountryId = 418, CountryCode = "LA", Name = "Lao People's Democratic Republic" },
                new Country { CountryId = 428, CountryCode = "LV", Name = "Latvia" },
                new Country { CountryId = 422, CountryCode = "LB", Name = "Lebanon" },
                new Country { CountryId = 426, CountryCode = "LS", Name = "Lesotho" },
                new Country { CountryId = 430, CountryCode = "LR", Name = "Liberia" },
                new Country { CountryId = 434, CountryCode = "LY", Name = "Libya" },
                new Country { CountryId = 438, CountryCode = "LI", Name = "Liechtenstein" },
                new Country { CountryId = 440, CountryCode = "LT", Name = "Lithuania" },
                new Country { CountryId = 442, CountryCode = "LU", Name = "Luxembourg" },
                new Country { CountryId = 446, CountryCode = "MO", Name = "Macao" },
                new Country { CountryId = 807, CountryCode = "MK", Name = "Macedonia (the former Yugoslav Republic of)" },
                new Country { CountryId = 450, CountryCode = "MG", Name = "Madagascar" },
                new Country { CountryId = 454, CountryCode = "MW", Name = "Malawi" },
                new Country { CountryId = 458, CountryCode = "MY", Name = "Malaysia" },
                new Country { CountryId = 462, CountryCode = "MV", Name = "Maldives" },
                new Country { CountryId = 466, CountryCode = "ML", Name = "Mali" },
                new Country { CountryId = 470, CountryCode = "MT", Name = "Malta" },
                new Country { CountryId = 584, CountryCode = "MH", Name = "Marshall Islands" },
                new Country { CountryId = 474, CountryCode = "MQ", Name = "Martinique" },
                new Country { CountryId = 478, CountryCode = "MR", Name = "Mauritania" },
                new Country { CountryId = 480, CountryCode = "MU", Name = "Mauritius" },
                new Country { CountryId = 175, CountryCode = "YT", Name = "Mayotte" },
                new Country { CountryId = 484, CountryCode = "MX", Name = "Mexico" },
                new Country { CountryId = 583, CountryCode = "FM", Name = "Micronesia (Federated States of)" },
                new Country { CountryId = 498, CountryCode = "MC", Name = "Monaco" },
                new Country { CountryId = 492, CountryCode = "MN", Name = "Mongolia" },
                new Country { CountryId = 499, CountryCode = "ME", Name = "Montenegro" },
                new Country { CountryId = 500, CountryCode = "MS", Name = "Montserrat" },
                new Country { CountryId = 504, CountryCode = "MA", Name = "Morocco" },
                new Country { CountryId = 508, CountryCode = "MZ", Name = "Mozambique" },
                new Country { CountryId = 104, CountryCode = "MM", Name = "Myanmar" },
                new Country { CountryId = 516, CountryCode = "NA", Name = "Namibia" },
                new Country { CountryId = 520, CountryCode = "NR", Name = "Nauru" },
                new Country { CountryId = 524, CountryCode = "NP", Name = "Nepal" },
                new Country { CountryId = 528, CountryCode = "NL", Name = "Netherlands" },
                new Country { CountryId = 540, CountryCode = "NC", Name = "New Caledonia" },
                new Country { CountryId = 554, CountryCode = "NZ", Name = "New Zealand" },
                new Country { CountryId = 558, CountryCode = "NI", Name = "Nicaragua" },
                new Country { CountryId = 562, CountryCode = "NE", Name = "Niger" },
                new Country { CountryId = 566, CountryCode = "NG", Name = "Nigeria" },
                new Country { CountryId = 570, CountryCode = "NU", Name = "Niue" },
                new Country { CountryId = 574, CountryCode = "NF", Name = "Norfolk Island" },
                new Country { CountryId = 580, CountryCode = "MP", Name = "Northern Mariana Islands" },
                new Country { CountryId = 578, CountryCode = "NO", Name = "Norway" },
                new Country { CountryId = 512, CountryCode = "OM", Name = "Oman" },
                new Country { CountryId = 586, CountryCode = "PK", Name = "Pakistan" },
                new Country { CountryId = 585, CountryCode = "PW", Name = "Palau" },
                new Country { CountryId = 275, CountryCode = "PS", Name = "Palestine, State of" },
                new Country { CountryId = 591, CountryCode = "PA", Name = "Panama" },
                new Country { CountryId = 598, CountryCode = "PG", Name = "Papua New Guinea" },
                new Country { CountryId = 600, CountryCode = "PY", Name = "Paraguay" },
                new Country { CountryId = 604, CountryCode = "PE", Name = "Peru" },
                new Country { CountryId = 608, CountryCode = "PH", Name = "Philippines" },
                new Country { CountryId = 612, CountryCode = "PN", Name = "Pitcairn" },
                new Country { CountryId = 616, CountryCode = "PL", Name = "Poland" },
                new Country { CountryId = 620, CountryCode = "PT", Name = "Portugal" },
                new Country { CountryId = 630, CountryCode = "PR", Name = "Puerto Rico" },
                new Country { CountryId = 634, CountryCode = "QA", Name = "Qatar" },
                new Country { CountryId = 638, CountryCode = "RE", Name = "Réunion" },
                new Country { CountryId = 642, CountryCode = "RO", Name = "Romania" },
                new Country { CountryId = 643, CountryCode = "RU", Name = "Russian Federation" },
                new Country { CountryId = 646, CountryCode = "RW", Name = "Rwanda" },
                new Country { CountryId = 652, CountryCode = "BL", Name = "Saint Barthélemy" },
                new Country { CountryId = 654, CountryCode = "SH", Name = "Saint Helena, Ascension and Tristan da Cunha" },
                new Country { CountryId = 659, CountryCode = "KN", Name = "Saint Kitts and Nevis" },
                new Country { CountryId = 662, CountryCode = "LC", Name = "Saint Lucia" },
                new Country { CountryId = 663, CountryCode = "MF", Name = "Saint Martin (French part)" },
                new Country { CountryId = 666, CountryCode = "PM", Name = "Saint Pierre and Miquelon" },
                new Country { CountryId = 670, CountryCode = "VC", Name = "Saint Vincent and the Grenadines" },
                new Country { CountryId = 882, CountryCode = "WS", Name = "Samoa" },
                new Country { CountryId = 674, CountryCode = "SM", Name = "San Marino" },
                new Country { CountryId = 678, CountryCode = "ST", Name = "Sao Tome and Principe" },
                new Country { CountryId = 682, CountryCode = "SA", Name = "Saudi Arabia" },
                new Country { CountryId = 686, CountryCode = "SN", Name = "Senegal" },
                new Country { CountryId = 688, CountryCode = "RS", Name = "Serbia" },
                new Country { CountryId = 690, CountryCode = "SC", Name = "Seychelles" },
                new Country { CountryId = 694, CountryCode = "SL", Name = "Sierra Leone" },
                new Country { CountryId = 702, CountryCode = "SG", Name = "Singapore" },
                new Country { CountryId = 534, CountryCode = "SX", Name = "Sint Maarten (Dutch part)" },
                new Country { CountryId = 703, CountryCode = "SK", Name = "Slovakia" },
                new Country { CountryId = 705, CountryCode = "SI", Name = "Slovenia" },
                new Country { CountryId = 90, CountryCode = "SB", Name = "Solomon Islands" },
                new Country { CountryId = 706, CountryCode = "SO", Name = "Somalia" },
                new Country { CountryId = 710, CountryCode = "ZA", Name = "South Africa" },
                new Country { CountryId = 239, CountryCode = "GS", Name = "South Georgia and the South Sandwich Islands" },
                new Country { CountryId = 728, CountryCode = "SS", Name = "South Sudan" },
                new Country { CountryId = 724, CountryCode = "ES", Name = "Spain" },
                new Country { CountryId = 144, CountryCode = "LK", Name = "Sri Lanka" },
                new Country { CountryId = 729, CountryCode = "SD", Name = "Sudan" },
                new Country { CountryId = 740, CountryCode = "SR", Name = "Suriname" },
                new Country { CountryId = 744, CountryCode = "SJ", Name = "Svalbard and Jan Mayen" },
                new Country { CountryId = 748, CountryCode = "SZ", Name = "Swaziland" },
                new Country { CountryId = 752, CountryCode = "SE", Name = "Sweden" },
                new Country { CountryId = 756, CountryCode = "CH", Name = "Switzerland" },
                new Country { CountryId = 760, CountryCode = "SY", Name = "Syrian Arab Republic" },
                new Country { CountryId = 158, CountryCode = "TW", Name = "Taiwan, Province of China" },
                new Country { CountryId = 762, CountryCode = "TJ", Name = "Tajikistan" },
                new Country { CountryId = 834, CountryCode = "TZ", Name = "Tanzania, United Republic of" },
                new Country { CountryId = 764, CountryCode = "TH", Name = "Thailand" },
                new Country { CountryId = 626, CountryCode = "TL", Name = "Timor-Leste" },
                new Country { CountryId = 768, CountryCode = "TG", Name = "Togo" },
                new Country { CountryId = 772, CountryCode = "TK", Name = "Tokelau" },
                new Country { CountryId = 776, CountryCode = "TO", Name = "Tonga" },
                new Country { CountryId = 780, CountryCode = "TT", Name = "Trinidad and Tobago" },
                new Country { CountryId = 788, CountryCode = "TN", Name = "Tunisia" },
                new Country { CountryId = 792, CountryCode = "TR", Name = "Turkey" },
                new Country { CountryId = 795, CountryCode = "TM", Name = "Turkmenistan" },
                new Country { CountryId = 796, CountryCode = "TC", Name = "Turks and Caicos Islands" },
                new Country { CountryId = 798, CountryCode = "TV", Name = "Tuvalu" },
                new Country { CountryId = 800, CountryCode = "UG", Name = "Uganda" },
                new Country { CountryId = 804, CountryCode = "UA", Name = "Ukraine" },
                new Country { CountryId = 784, CountryCode = "AE", Name = "United Arab Emirates" },
                new Country { CountryId = 826, CountryCode = "GB", Name = "United Kingdom of Great Britain and Northern Ireland" },
                new Country { CountryId = 840, CountryCode = "US", Name = "United States of America" },
                new Country { CountryId = 581, CountryCode = "UM", Name = "United States Minor Outlying Islands" },
                new Country { CountryId = 858, CountryCode = "UY", Name = "Uruguay" },
                new Country { CountryId = 860, CountryCode = "UZ", Name = "Uzbekistan" },
                new Country { CountryId = 548, CountryCode = "VU", Name = "Vanuatu" },
                new Country { CountryId = 862, CountryCode = "VE", Name = "Venezuela (Bolivarian Republic of)" },
                new Country { CountryId = 704, CountryCode = "VN", Name = "Viet Nam" },
                new Country { CountryId = 92, CountryCode = "VG", Name = "Virgin Islands (British)" },
                new Country { CountryId = 850, CountryCode = "VI", Name = "Virgin Islands (U.S.)" },
                new Country { CountryId = 876, CountryCode = "WF", Name = "Wallis and Futuna" },
                new Country { CountryId = 732, CountryCode = "EH", Name = "Western Sahara" },
                new Country { CountryId = 887, CountryCode = "YE", Name = "Yemen" },
                new Country { CountryId = 894, CountryCode = "ZM", Name = "Zambia" },
                new Country { CountryId = 716, CountryCode = "ZW", Name = "Zimbabwe" }
                );
        }
    }
}
