// <auto-generated />
using System;
using EPR.PRN.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EPR.PRN.Backend.Data.Migrations
{
    [DbContext(typeof(EprContext))]
    [Migration("20250310153234_InitialRegistration")]
    partial class InitialRegistration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GridReference")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TownCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.AppRefPerMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("AppRefPerMaterial");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Reprocessor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Exporter"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Eprn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccreditationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccreditationYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DecemberWaste")
                        .HasColumnType("bit");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsExport")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuedByOrg")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IssuerNotes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IssuerReference")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("LastUpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ObligationYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PackagingProducer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrnNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrnSignatory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrnSignatoryPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PrnStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessToBeUsed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProducerAgency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReprocessingSite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReprocessorExporterAgency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Signature")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StatusUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TonnageValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("PrnNumber")
                        .IsUnique();

                    b.ToTable("Prn");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.FeesAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId")
                        .IsUnique();

                    b.ToTable("FeesAmount");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FileUploadStatusId")
                        .HasColumnType("int");

                    b.Property<int>("FileUploadTypeId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<Guid>("UploadedBy")
                        .HasMaxLength(200)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FileUploadStatusId");

                    b.HasIndex("FileUploadTypeId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.FileUploadStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FileUploadStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Virus check failed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Virus check succeeded"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Upload complete"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Upload failed"
                        },
                        new
                        {
                            Id = 5,
                            Name = "File deleted"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.FileUploadType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("FileUploadType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SamplingAndInspectionPlan"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Material", b =>
                {
                    b.Property<string>("MaterialName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("MaterialName");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            MaterialName = "Plastic",
                            MaterialCode = "PL"
                        },
                        new
                        {
                            MaterialName = "Wood",
                            MaterialCode = "WD"
                        },
                        new
                        {
                            MaterialName = "Aluminium",
                            MaterialCode = "AL"
                        },
                        new
                        {
                            MaterialName = "Steel",
                            MaterialCode = "ST"
                        },
                        new
                        {
                            MaterialName = "Paper",
                            MaterialCode = "PC"
                        },
                        new
                        {
                            MaterialName = "Glass",
                            MaterialCode = "GL"
                        },
                        new
                        {
                            MaterialName = "FibreComposite",
                            MaterialCode = "FC"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.MaterialPermitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaterialPermitType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Environmental permit or waste management licence",
                            NationId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Installation Permit",
                            NationId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pollution, Prevention, and Control (PPC) permit",
                            NationId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Waste Exemption",
                            NationId = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Waste Management Licence",
                            NationId = 0
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.ObligationCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CalculatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MaterialObligationValue")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Tonnage")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ObligationCalculations");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.PEprNpwdSync", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PRNId")
                        .HasColumnType("int");

                    b.Property<int>("PRNStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PEprNpwdSync");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Period");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Per Week"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Per Month"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Per Year"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.PrnStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PrnStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusDescription = "Prn Accepted",
                            StatusName = "ACCEPTED"
                        },
                        new
                        {
                            Id = 2,
                            StatusDescription = "Prn Rejected",
                            StatusName = "REJECTED"
                        },
                        new
                        {
                            Id = 3,
                            StatusDescription = "Prn Cancelled",
                            StatusName = "CANCELLED"
                        },
                        new
                        {
                            Id = 4,
                            StatusDescription = "Prn Awaiting Acceptance",
                            StatusName = "AWAITINGACCEPTANCE"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.PrnStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("CreatedByOrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrnIdFk")
                        .HasColumnType("int");

                    b.Property<int>("PrnStatusIdFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrnIdFk");

                    b.ToTable("PrnStatusHistory");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RecyclingTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialNameRT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Target")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RecyclingTargets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaterialNameRT = "Paper",
                            Target = 0.75m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 2,
                            MaterialNameRT = "Paper",
                            Target = 0.77m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 3,
                            MaterialNameRT = "Paper",
                            Target = 0.79m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 4,
                            MaterialNameRT = "Paper",
                            Target = 0.81m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 5,
                            MaterialNameRT = "Paper",
                            Target = 0.83m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 6,
                            MaterialNameRT = "Paper",
                            Target = 0.85m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 7,
                            MaterialNameRT = "Glass",
                            Target = 0.74m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 8,
                            MaterialNameRT = "Glass",
                            Target = 0.76m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 9,
                            MaterialNameRT = "Glass",
                            Target = 0.78m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 10,
                            MaterialNameRT = "Glass",
                            Target = 0.8m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 11,
                            MaterialNameRT = "Glass",
                            Target = 0.82m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 12,
                            MaterialNameRT = "Glass",
                            Target = 0.85m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 13,
                            MaterialNameRT = "Aluminium",
                            Target = 0.61m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 14,
                            MaterialNameRT = "Aluminium",
                            Target = 0.62m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 15,
                            MaterialNameRT = "Aluminium",
                            Target = 0.63m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 16,
                            MaterialNameRT = "Aluminium",
                            Target = 0.64m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 17,
                            MaterialNameRT = "Aluminium",
                            Target = 0.65m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 18,
                            MaterialNameRT = "Aluminium",
                            Target = 0.67m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 19,
                            MaterialNameRT = "Steel",
                            Target = 0.8m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 20,
                            MaterialNameRT = "Steel",
                            Target = 0.81m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 21,
                            MaterialNameRT = "Steel",
                            Target = 0.82m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 22,
                            MaterialNameRT = "Steel",
                            Target = 0.83m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 23,
                            MaterialNameRT = "Steel",
                            Target = 0.84m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 24,
                            MaterialNameRT = "Steel",
                            Target = 0.85m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 25,
                            MaterialNameRT = "Plastic",
                            Target = 0.55m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 26,
                            MaterialNameRT = "Plastic",
                            Target = 0.57m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 27,
                            MaterialNameRT = "Plastic",
                            Target = 0.59m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 28,
                            MaterialNameRT = "Plastic",
                            Target = 0.61m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 29,
                            MaterialNameRT = "Plastic",
                            Target = 0.63m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 30,
                            MaterialNameRT = "Plastic",
                            Target = 0.65m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 31,
                            MaterialNameRT = "Wood",
                            Target = 0.45m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 32,
                            MaterialNameRT = "Wood",
                            Target = 0.46m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 33,
                            MaterialNameRT = "Wood",
                            Target = 0.47m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 34,
                            MaterialNameRT = "Wood",
                            Target = 0.48m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 35,
                            MaterialNameRT = "Wood",
                            Target = 0.49m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 36,
                            MaterialNameRT = "Wood",
                            Target = 0.5m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 37,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.75m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 38,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.76m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 39,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.77m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 40,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.78m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 41,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.79m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 42,
                            MaterialNameRT = "GlassRemelt",
                            Target = 0.8m,
                            Year = 2030
                        },
                        new
                        {
                            Id = 43,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.75m,
                            Year = 2025
                        },
                        new
                        {
                            Id = 44,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.77m,
                            Year = 2026
                        },
                        new
                        {
                            Id = 45,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.79m,
                            Year = 2027
                        },
                        new
                        {
                            Id = 46,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.81m,
                            Year = 2028
                        },
                        new
                        {
                            Id = 47,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.83m,
                            Year = 2029
                        },
                        new
                        {
                            Id = 48,
                            MaterialNameRT = "FibreComposite",
                            Target = 0.85m,
                            Year = 2030
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessAddressId")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("LegalDocumentAddressId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrganisationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RegistrationStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ReprocessingSiteAddressId")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("BusinessAddressId");

                    b.HasIndex("LegalDocumentAddressId");

                    b.HasIndex("RegistrationStatusId");

                    b.HasIndex("ReprocessingSiteAddressId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrationContactId")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RegistrationContactId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("RegistrationContact");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EnvironmentalPermitWasteManagementPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("EnvironmentalPermitWasteManagementTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FeesId")
                        .HasColumnType("int");

                    b.Property<int?>("InstallationPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallationReprocessingTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsMaterialRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("MaxCapacityTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MaxPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaximumReprocessingCapacityTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MaximumReprocessingPeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("PPCPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("PPCReprocessingCapacityTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PermitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForNotRegistration")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<bool>("RegisteredWasteCarrierBrokerDealerFlag")
                        .HasColumnType("bit");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<string>("WasteCarrierBrokerDealerRegistration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WasteManagementPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("WasteManagementReprocessingCapacityTonne")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentalPermitWasteManagementPeriodId");

                    b.HasIndex("FeesId");

                    b.HasIndex("InstallationPeriodId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("MaxPeriodId");

                    b.HasIndex("MaximumReprocessingPeriodId");

                    b.HasIndex("PPCPeriodId");

                    b.HasIndex("PermitTypeId");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("WasteManagementPeriodId");

                    b.ToTable("RegistrationMaterial");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationProcessingIORawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInput")
                        .HasColumnType("bit");

                    b.Property<string>("RawMaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationReprocessingIOId")
                        .HasColumnType("int");

                    b.Property<decimal>("TonneValue")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationReprocessingIOId");

                    b.ToTable("RegistrationProcessingIORawMaterial");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationReprocessingIO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ContaminantsTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaterialId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("NonUKPackgagingWasteTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("NotUKPackgagingWasteTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PlantEquipmentUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProcessLossTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<bool>("ReprocessingPackgagingWasteLastYearFlag")
                        .HasColumnType("bit");

                    b.Property<decimal>("SentToOtherSiteTonne")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TypeOfSuppliers")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("UKPackgagingWasteTonne")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RegistrationId");

                    b.ToTable("RegistrationReprocessingIO");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Accepted"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cancelled"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Granted"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Queried"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Refused"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Started"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Submitted"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Suspended"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Updated"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Withdrawn"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationTaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RegistrationContactId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("TaskStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationContactId");

                    b.HasIndex("TaskId");

                    b.HasIndex("TaskStatusId");

                    b.ToTable("RegistrationTaskStatus");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.SaveAndContinue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationId");

                    b.ToTable("SaveAndContinue");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.TaskName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TaskName");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SiteAddressAndContactDetails"
                        },
                        new
                        {
                            Id = 2,
                            Name = "WasteLicensesPermitsAndExemption"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ReprocessingInputandOutput"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SamplingAndInspectionPlanPerMaterial"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TaskStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Not started"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Started"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cannot start yet"
                        });
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.AppRefPerMaterial", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany("AppRefPerMaterials")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.FileUpload", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.FileUploadStatus", "FileUploadStatus")
                        .WithMany()
                        .HasForeignKey("FileUploadStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.FileUploadType", "FileUploadType")
                        .WithMany()
                        .HasForeignKey("FileUploadTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany("FileUploads")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUploadStatus");

                    b.Navigation("FileUploadType");

                    b.Navigation("Material");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.PrnStatusHistory", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Eprn", null)
                        .WithMany("PrnStatusHistories")
                        .HasForeignKey("PrnIdFk")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Registration", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.ApplicationType", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Address", "BusinessAddress")
                        .WithMany("BusinessAddresses")
                        .HasForeignKey("BusinessAddressId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Address", "LegalDocumentAddress")
                        .WithMany("LegalDocumentAddresses")
                        .HasForeignKey("LegalDocumentAddressId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.RegistrationStatus", "RegistrationStatus")
                        .WithMany()
                        .HasForeignKey("RegistrationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Address", "ReprocessingSiteAddress")
                        .WithMany("ReprocessingSiteAddresses")
                        .HasForeignKey("ReprocessingSiteAddressId");

                    b.Navigation("ApplicationType");

                    b.Navigation("BusinessAddress");

                    b.Navigation("LegalDocumentAddress");

                    b.Navigation("RegistrationStatus");

                    b.Navigation("ReprocessingSiteAddress");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationContact", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.RegistrationContact", null)
                        .WithMany("RegistrationContacts")
                        .HasForeignKey("RegistrationContactId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationMaterial", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "EnvironmentalPermitWasteManagementPeriod")
                        .WithMany("EnvironmentalPermitWasteManagementPeriods")
                        .HasForeignKey("EnvironmentalPermitWasteManagementPeriodId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.FeesAmount", "Fees")
                        .WithMany()
                        .HasForeignKey("FeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "InstallationPeriod")
                        .WithMany("InstallationPeriods")
                        .HasForeignKey("InstallationPeriodId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "MaxPeriod")
                        .WithMany("MaxPeriods")
                        .HasForeignKey("MaxPeriodId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "MaximumReprocessingPeriod")
                        .WithMany("MaximumReprocessingPeriods")
                        .HasForeignKey("MaximumReprocessingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "PPCPeriod")
                        .WithMany("PPCPeriods")
                        .HasForeignKey("PPCPeriodId");

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.MaterialPermitType", "MaterialPermitType")
                        .WithMany()
                        .HasForeignKey("PermitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany("RegistrationMaterials")
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Period", "WasteManagementPeriod")
                        .WithMany("WasteManagementPeriods")
                        .HasForeignKey("WasteManagementPeriodId");

                    b.Navigation("EnvironmentalPermitWasteManagementPeriod");

                    b.Navigation("Fees");

                    b.Navigation("InstallationPeriod");

                    b.Navigation("Material");

                    b.Navigation("MaterialPermitType");

                    b.Navigation("MaxPeriod");

                    b.Navigation("MaximumReprocessingPeriod");

                    b.Navigation("PPCPeriod");

                    b.Navigation("Registration");

                    b.Navigation("WasteManagementPeriod");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationProcessingIORawMaterial", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.RegistrationReprocessingIO", "RegistrationReprocessingIO")
                        .WithMany()
                        .HasForeignKey("RegistrationReprocessingIOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistrationReprocessingIO");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationReprocessingIO", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationTaskStatus", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.RegistrationContact", "RegistrationContact")
                        .WithMany()
                        .HasForeignKey("RegistrationContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.TaskName", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPR.PRN.Backend.Data.DataModels.TaskStatus", "TaskStatus")
                        .WithMany()
                        .HasForeignKey("TaskStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistrationContact");

                    b.Navigation("Task");

                    b.Navigation("TaskStatus");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.SaveAndContinue", b =>
                {
                    b.HasOne("EPR.PRN.Backend.Data.DataModels.Registration", "Registration")
                        .WithMany()
                        .HasForeignKey("RegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Address", b =>
                {
                    b.Navigation("BusinessAddresses");

                    b.Navigation("LegalDocumentAddresses");

                    b.Navigation("ReprocessingSiteAddresses");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Eprn", b =>
                {
                    b.Navigation("PrnStatusHistories");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Period", b =>
                {
                    b.Navigation("EnvironmentalPermitWasteManagementPeriods");

                    b.Navigation("InstallationPeriods");

                    b.Navigation("MaxPeriods");

                    b.Navigation("MaximumReprocessingPeriods");

                    b.Navigation("PPCPeriods");

                    b.Navigation("WasteManagementPeriods");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.Registration", b =>
                {
                    b.Navigation("AppRefPerMaterials");

                    b.Navigation("FileUploads");

                    b.Navigation("RegistrationMaterials");
                });

            modelBuilder.Entity("EPR.PRN.Backend.Data.DataModels.RegistrationContact", b =>
                {
                    b.Navigation("RegistrationContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
